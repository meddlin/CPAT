---
  version: '2'
  
  services:
    mongo:
      image: mongo:4.2.5
      hostname: mongo
      container_name: mongo
      volumes:
        - mongo-data:/data/db
      ports:
        - "27017:27017"
      environment:
        MONGO_INITDB_ROOT_USERNAME: mongo-user
        MONGO_INITDB_ROOT_PASSWORD: mongo-pw
        MONGO_REPLICA_SET_NAME: my-replica-set
      command: --replSet my-replica-set --bind_ip_all
  
    postgres:
      image: debezium/postgres:12
      hostname: postgres
      container_name: postgres
      ports:
        - "5432:5432"
      environment:
        POSTGRES_USER: postgres-user
        POSTGRES_PASSWORD: postgres-pw
        POSTGRES_DB: customers
      volumes:
        - ./postgres/custom-config.conf:/etc/postgresql/postgresql.conf
      command: postgres -c config_file=/etc/postgresql/postgresql.conf
  
    elastic:
      image: elasticsearch:7.8.0
      hostname: elastic
      container_name: elastic
      volumes:
        - elastic-data:/usr/share/elasticsearch/data
      ports:
        - "9200:9200"
        - "9300:9300"
      environment:
        discovery.type: single-node
  
    kibana:
      image: docker.elastic.co/kibana/kibana:7.8.0
      container_name: kibana
      depends_on:
        - elastic
      volumes:
        - ./kibana.yml:/usr/share/kibana/config/kibana.yml
      ports:
        - 5601:5601
  
    zookeeper:
      image: confluentinc/cp-zookeeper:5.5.0
      hostname: zookeeper
      container_name: zookeeper
      ports:
        - "2181:2181"
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
  
    broker:
      image: confluentinc/cp-enterprise-kafka:5.5.0
      hostname: broker
      container_name: broker
      depends_on:
        - zookeeper
      ports:
        - "29092:29092"
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  
    schema-registry:
      image: confluentinc/cp-schema-registry:5.5.0
      hostname: schema-registry
      container_name: schema-registry
      depends_on:
        - zookeeper
        - broker
      ports:
        - "8081:8081"
      environment:
        SCHEMA_REGISTRY_HOST_NAME: schema-registry
        SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
  
    ksqldb-server:
      image: confluentinc/ksqldb-server:0.10.0
      hostname: ksqldb-server
      container_name: ksqldb-server
      depends_on:
        - broker
        - schema-registry
      ports:
        - "8088:8088"
      volumes:
        - "./confluent-hub-components/:/usr/share/kafka/plugins/"
      environment:
        KSQL_LISTENERS: "http://0.0.0.0:8088"
        KSQL_BOOTSTRAP_SERVERS: "broker:9092"
        KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
        KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
        KSQL_CONNECT_GROUP_ID: "ksql-connect-cluster"
        KSQL_CONNECT_BOOTSTRAP_SERVERS: "broker:9092"
        KSQL_CONNECT_KEY_CONVERTER: "io.confluent.connect.avro.AvroConverter"
        KSQL_CONNECT_VALUE_CONVERTER: "io.confluent.connect.avro.AvroConverter"
        KSQL_CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        KSQL_CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
        KSQL_CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
        KSQL_CONNECT_CONFIG_STORAGE_TOPIC: "ksql-connect-configs"
        KSQL_CONNECT_OFFSET_STORAGE_TOPIC: "ksql-connect-offsets"
        KSQL_CONNECT_STATUS_STORAGE_TOPIC: "ksql-connect-statuses"
        KSQL_CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
        KSQL_CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
        KSQL_CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
        KSQL_CONNECT_PLUGIN_PATH: "/usr/share/kafka/plugins"
  
    ksqldb-cli:
      image: confluentinc/ksqldb-cli:0.10.0
      container_name: ksqldb-cli
      depends_on:
        - broker
        - ksqldb-server
      entrypoint: /bin/sh
      tty: true
  
  volumes:
    mongo-data:
      driver: local
    elastic-data:
      driver: local